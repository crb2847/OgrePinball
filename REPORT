Eric Tew
Chris Bentson
Nicolas Chaim
Matthew Romanelli

Coinball

Milestone 1 Report

== Current work ==

Input devices
At this point we have successfully completed the input device infrastructure to enable multiple off-the-shelf gyroscope-enabled "air mice" to be used as independent controllers. Our framework makes use of the X Input Extension 2 (XI2), a part of X11 that allows the simultaneous use of multiple independent input devices. In our implementation, the air mice are detached from the system pointer, capturing independent raw motion data for each controller. Buttons pressed on each controller can also be read independently, and their default actions (e.g. power key, volume key, etc.) are detached from the operating system. Our current code works correctly on the CS lab machines. At this point, control of the paddle using the gyroscope remote is only enabled in single player mode.


Refactoring Classes
So far we have created class-states which will allow us to narrow down our efforts when debugging, and also let us build only on a specific part of the game. For example if we needed to add a new menu button, then we only need to edit the MainMenuState class. Same goes for implementing new gameplay features, we would only need to edit the SingleplayerState/MultiplayerState. It also makes the code far more readable as we arent trying to decipher which booleans are active at any given time during the execution of the game. These states also allow us to load only what we need when we need it, instead of loading everything at the start of the game.

GUI Development
As of now, most of the GUI has been implemented.  Upon loading the game, a main menu is present with the following buttons: Single Player, Multiplayer, How To Play, Settings, and Quit.  All buttons with the exception of the Multiplayer button are functional.  The Quit button exits the game.  The How To Play button opens up a new menu that contains gameplay information and controls as well as a back button back to the main menu.  The Settings button opens up a new menu with a button that enables a player to disable/enable the sound as well as a back button back to the main menu.  The Single Player button starts single player mode.  During the game, there is a pause button in the top left corner that, when clicked, opens up a pause menu that has the following self-explanatory buttons: Resume, Main Menu, Disable Sound.  There is also a score box in the top right corner.

== Work division ==

Nick: Input devices
Chris: Code refactoring
Matthew: GUI
Eric: Gameplay and playability adjustments including camera control and ball dynamics tuning


== Schedule ==

We are almost on schedule, except we need to merge two separate branches we have been working on. Currently, our plan looks as follows:

Wednesday 4/29/15 	Merge CEGUI branch (put into the mainmenu state)
Friday 5/2/15 	implement more gameplay features (paddle tilting, speed, separate scores)
Monday 5/4/15		Add as many levels as we can finish
Wednesday 5/6/15	Extras: particle systems
Friday 5/8/15		Finishing touches, demonstration video

== Future Challenges ==
We arent entirely sure how we are going to implement levels yet. We will more than likely have different levels for multiplayer/singleplayer, as the difficulty for singleplayer would be easier than multiplayer. 

Also, we have realized certain features require much more work than we originally thought. Certain previously planned features will only be implemented if time allows, including board nudging, moving coins of different types, and 3D ball movement.


== How to compile and run: ==

1) Go to the project root and type: cmake -G"Unix Makefiles"
2) Type: make -j8
3) Run the game, one instance on each of two computers on the same network: 
   ./OgrePinball


